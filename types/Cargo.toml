[package]
name = "memberlist-types"
version = "0.6.0"
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
readme.workspace = true
rust-version.workspace = true
keywords.workspace = true
categories.workspace = true
description = "Types used in the memberlist crate."

[features]
default = [
  "std",
  "bytes/default",
  "const-varint/default",
  "nodecraft/default",
  "smol_str/default",
  "smallvec-wrapper/default",
  "thiserror/default",
  "triomphe/default",

  "base64?/default",
]
alloc = ["nodecraft/alloc"]
std = [
  "bytes/std",
  "const-varint/std",
  "nodecraft/std",
  "smol_str/std",
  "smallvec-wrapper/std",
  "thiserror/std",
  "triomphe/std",

  "base64?/std",
]

arbitrary = ["dep:arbitrary", "nodecraft/arbitrary"]
quickcheck = ["dep:quickcheck", "nodecraft/quickcheck"]

encryption = ["base64"]
serde = ["dep:serde", "smol_str/serde", "bytes/serde", "nodecraft/serde", "smallvec-wrapper/serde"]

[dependencies]
bytes.workspace = true
const-varint.workspace = true
derive_more = { workspace = true, features = ["from", "is_variant", "unwrap", "try_unwrap"] }
either = { version = "1", default-features = false }
ipnet = { version = "2", default-features = false }
nodecraft.workspace = true
paste.workspace = true
smol_str.workspace = true
smallvec-wrapper.workspace = true
triomphe.workspace = true
thiserror.workspace = true
viewit.workspace = true

arbitrary = { version = "1", default-features = false, optional = true, features = ["derive"] }
quickcheck = { version = "1", default-features = false, optional = true }

base64 = { version = "0.22", default-features = false, optional = true }
serde = { workspace = true, optional = true }

metrics = { workspace = true, optional = true }
tracing = { workspace = true, optional = true }

[dev-dependencies]
arbitrary = "1"
quickcheck = "1"
quickcheck_macros = "1"
rand = "0.9"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
rust_2018_idioms = "warn"
single_use_lifetimes = "warn"
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(all_tests)',
] }
