[package]
name = "showbiz-core"
license = { workspace = true }
repository = { workspace = true }
homepage = { workspace = true }
version = { workspace= true }
edition = { workspace= true }

[features]
default = ["metrics"]

# TODO: temporarily disable nightly, wait Rust's issue https://github.com/rust-lang/rust/issues/111105 to be fixed
# nightly = ["agnostic/nightly"]

# implement tokio::io::AsyncRead/AsyncWrite for Tcp/Udp
tokio-compat = ["agnostic/tokio-compat"]
metrics = ["dep:metrics"]

serde = ["dep:serde", "bytes/serde", "nodecraft/serde"]
rkyv = ["dep:rkyv", "nodecraft/rkyv"]

# expose all tests fn for users who want to use other runtime
# see showbiz-wasm for more examples about how to use those tests fn
test = ["tracing-subscriber", "pnet"]

[target.'cfg(target_family = "wasm")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }
once_cell = "1.17"

[target.'cfg(not(any(target_family = "wasm", windows)))'.dependencies]
rustix = { version = "0.38", features = ["system"] }

[target.'cfg(windows)'.dependencies]
hostname = "0.3"

[dependencies]
# async common
agnostic = { workspace = true, features = ["net", "dns"] }
async-channel.workspace = true 
async-lock = { version = "3" }
async-recursion = { version = "1" }
derive_more.workspace = true
futures.workspace = true

# common
atomic = "=0.5" # keep on 0.5
aead = { version = "0.5", features = ["bytes"] }
aes-gcm = "0.10"
bytes = { workspace = true }
base64 = "0.21"
bytemuck = { version = "1.3", features = ["derive"] }
cbc = "0.1"
crc32fast = "1"
crossbeam-utils = "0.8"
crossbeam-skiplist = "0.1"
crossbeam-queue = "0.3"
either = "1"
local-ip-address = "0.5"
itertools = "0.12"
nodecraft = { workspace = true }
paste = "1" # TODO: remove this dependency when Rust's concat_ident macro stable
parking_lot = { version = "0.12", features = ["send_guard"] }
pollster = "0.3"
pin-project.workspace = true
rand = { version = "0.8" }
rayon = "1.7"
rkyv = { version = "0.7", features = ["validation", "bytes", "smol_str"], optional = true }
scopeguard = "1.1"
smol_str.workspace = true
smallvec.workspace = true
serde = { workspace = true, optional = true }
humantime-serde = "1"
thiserror = { workspace = true }
tracing.workspace = true
viewit = { workspace = true }
weezl = { version = "0.1", features = ["async"] }
wg = "0.3"

# optional
pnet = { version = "0.34", optional = true }
tracing-subscriber = { version = "0.3", optional = true, features = ["env-filter", "tracing-log"] }
metrics = { workspace = true, optional = true }

[dev-dependencies]
tracing-subscriber = { version = "0.3", features = ["env-filter", "tracing-log"] }
pnet = "0.34"
agnostic = { workspace = true, features = ["net", "tokio"] }
tokio = { version = "1.32", features = ["full"] }
tokio-util = { version = "0.7", features = ["compat"] }

