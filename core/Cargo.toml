[package]
name = "memberlist-core"
version = "0.6.0"
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
readme.workspace = true
rust-version.workspace = true
keywords.workspace = true
categories.workspace = true
description = "A highly customable, adaptable, async runtime agnostic Gossip protocol which helps manage cluster membership and member failure detection."

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["metrics", "compression", "snappy", "encryption", "crc32"]
metrics = ["dep:metrics", "memberlist-types/metrics"]

# checksum related feature
crc32 = ["crc32fast"]
xxhash32 = ["xxhash-rust/xxh32"]
xxhash64 = ["xxhash-rust/xxh64"]
xxhash3 = ["xxhash-rust/xxh3"]
murmur3 = ["dep:hash32"]

# encryption related feature
encryption = ["rayon", "aead", "aes-gcm", "cbc", "indexmap"]

# compression related feature
compression = ["rayon"]
lz4 = ["lz4_flex"]
brotli = ["dep:brotli"]
snappy = ["dep:snap"]
zstd = ["dep:zstd"]

serde = [
  "dep:serde",
  "bytes/serde",
  "nodecraft/serde",
  "humantime-serde",
  "memberlist-types/serde",
]

tokio = ["agnostic-io/tokio"]

# expose all tests fn for users who want to use other runtime
# see memberlist-wasm for more examples about how to use those tests fn
test = ["tracing-subscriber"]

[target.'cfg(target_family = "wasm")'.dependencies]
getrandom.workspace = true
once_cell = "1.17"

[target.'cfg(not(any(target_family = "wasm", windows)))'.dependencies]
rustix = { version = "0.38", features = ["system"] }

[target.'cfg(windows)'.dependencies]
hostname = "0.4"

[dependencies]
auto_enums = { version = "0.8", features = ["futures03"] }
auto_impl.workspace = true
atomic_refcell.workspace = true
agnostic-lite.workspace = true
agnostic-io.workspace = true
async-channel.workspace = true
async-lock.workspace = true
bytes.workspace = true
byteorder.workspace = true
cfg-if = "1"
const-varint.workspace = true
derive_more.workspace = true
either.workspace = true
futures.workspace = true
nodecraft = { workspace = true, features = ["default", "async", "agnostic", "resolver"] }
paste.workspace = true
peekable.workspace = true
parking_lot = { version = "0.12", features = ["send_guard"] }
pin-project.workspace = true
rand.workspace = true
scopeguard.workspace = true
smol_str.workspace = true
smallvec.workspace = true
memberlist-types = { workspace = true, features = ["default"] }
smallvec-wrapper.workspace = true
triomphe.workspace = true
thiserror.workspace = true
tracing.workspace = true
viewit.workspace = true

# serde feature
serde = { workspace = true, optional = true }
humantime-serde = { workspace = true, optional = true }

# test feature
tracing-subscriber = { version = "0.3", optional = true, features = [
  "env-filter",
  "tracing-log",
] }

# encryption
aead = { version = "0.5", features = ["bytes", "std"], optional = true }
aes-gcm = { version = "0.10", optional = true }
cbc = { version = "0.1", optional = true }
indexmap = { workspace = true, optional = true }

# checksum
crc32fast = { version = "1", optional = true }
xxhash-rust = { version = "0.8", optional = true }
hash32 = { version = "0.3", optional = true }

# compression
brotli = { version = "7", optional = true }
snap = { version = "1", optional = true }
lz4_flex = { version = "0.11", optional = true }
zstd = { version = "0.13", optional = true }

rayon = { version = "1", optional = true }

# arbitrary feature
arbitrary = { workspace = true, optional = true }
quickcheck = { workspace = true, optional = true }

# metrics feature
metrics = { workspace = true, optional = true }

[dev-dependencies]
arbitrary = { workspace = true, features = ["derive"] }
quickcheck = { workspace = true, features = ["default"] }
quickcheck_macros = "1"
tracing-subscriber = { version = "0.3", features = [
  "env-filter",
  "tracing-log",
] }
agnostic = { workspace = true, features = ["net", "tokio"] }
rand.workspace = true
tokio = { version = "1", features = ["full"] }
tokio-util = { version = "0.7", features = ["compat"] }
parking_lot = "0.12"
