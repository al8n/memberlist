[package]
name = "memberlist-net"
version = "0.6.0"
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
readme.workspace = true
rust-version.workspace = true
keywords.workspace = true
categories.workspace = true
description = "memberlist's transport layer based on TCP and UDP."

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["dns", "compression", "encryption"]

tokio = ["agnostic/tokio"]
async-std = ["agnostic/async-std"]
smol = ["agnostic/smol"]

tcp = []
tls = ["dep:futures-rustls"]

compression = ["rayon", "weezl"]
encryption = ["rayon", "aead", "aes-gcm", "cbc", "memberlist-core/encryption"]

serde = [
  "memberlist-core/serde",
  "dep:serde",
  "indexmap/serde",
  "humantime-serde",
]

metrics = ["memberlist-core/metrics", "dep:metrics"]
test = [
  "memberlist-core/test",
  "smol_str",
  "dns", 
  "test-cert-gen",
  "parking_lot",
]

# enable DNS node address resolver
dns = ["nodecraft/dns"]
dns-over-quic = ["dns", "nodecraft/dns-over-quic"]
dns-over-h3 = ["dns", "nodecraft/dns-over-h3"]
dns-over-https-rustls = ["dns", "nodecraft/dns-over-https-rustls"]
dns-over-rustls = ["dns", "nodecraft/dns-over-rustls"]
dns-over-openssl = ["dns", "nodecraft/dns-over-openssl"]
dns-over-native-tls = ["dns", "nodecraft/dns-over-native-tls"]
dns-webpki-roots = ["dns", "nodecraft/dns-webpki-roots"]
dns-native-certs = ["dns", "nodecraft/dns-native-certs"]
dnssec-openssl = ["dns", "nodecraft/dnssec-openssl"]
dnssec-ring = ["dns", "nodecraft/dnssec-ring"]
dnssec = ["dns", "nodecraft/dnssec"]

[target.'cfg(target_family = "wasm")'.dependencies]
getrandom.workspace = true

[dependencies]
atomic_refcell.workspace = true
agnostic.workspace = true
async-channel.workspace = true
async-lock.workspace = true
bytes.workspace = true
byteorder.workspace = true
crc32fast = "1"
either.workspace = true
futures = { workspace = true, features = ["bilock", "unstable"] }
indexmap.workspace = true
getifs.workspace = true
nodecraft = { workspace = true, features = ["async", "resolver", "agnostic"] }
peekable = { workspace = true, features = ["future"] }
pin-project.workspace = true
rand = "0.9"
memberlist-core.workspace = true
thiserror.workspace = true
tracing.workspace = true
viewit.workspace = true

# tls
futures-rustls = { version = "0.26", optional = true }

# compression & encryption
aead = { version = "0.5", features = ["bytes", "std"], optional = true }
aes-gcm = { version = "0.10", optional = true }
cbc = { version = "0.1", optional = true }
rayon = { version = "1.8", optional = true }
weezl = { version = "0.1", optional = true }

# serde
serde = { workspace = true, optional = true }
humantime-serde = { workspace = true, optional = true }

# metrics
metrics = { workspace = true, optional = true }

# test
smol_str = { workspace = true, optional = true }
test-cert-gen = { version = "0.9", optional = true }
parking_lot = { version = "0.12", optional = true }

[dev-dependencies]
agnostic = { workspace = true, features = ["net"] }
memberlist-core = { workspace = true, features = ["test"] }
smol_str.workspace = true
tokio = { version = "1", features = ["full", "tracing"] }
test-cert-gen = { version = "0.9" }
paste.workspace = true
parking_lot = "0.12"
