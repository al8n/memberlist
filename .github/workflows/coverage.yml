name: coverage

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'COPYRIGHT'
      - 'LICENSE*'
      - '**.md'
      - '**.txt'
      - 'art'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'COPYRIGHT'
      - 'LICENSE*'
      - '**.md'
      - '**.txt'
      - 'art'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage-report:
    name: Generate Coverage for ${{ matrix.crate }}-${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - crate: memberlist-core
            features: "test,metrics"
            name: "memberlist-core"
          - crate: memberlist-proto 
            features: "std,metrics,encryption,all-compression,all-checksum,quickcheck"
            name: "memberlist-proto-without-rayon"
          - crate: memberlist-proto
            features: "std,metrics,encryption,all-compression,all-checksum,rayon,quickcheck"
            name: "memberlist-proto-with-rayon"
          - crate: memberlist
            features: "test,tokio,tcp,tls,snappy,crc32,encryption,metrics"
            name: "memberlist-net-without-rayon"
          - crate: memberlist
            features: "test,tokio,tcp,tls,snappy,crc32,encryption,metrics,rayon"
            name: "memberlist-net-with-rayon"
          - crate: memberlist
            features: "test,tokio,quinn,snappy,metrics"
            name: "memberlist-quinn-without-rayon"
          - crate: memberlist
            features: "test,tokio,quinn,snappy,metrics"
            name: "memberlist-quinn-with-rayon"
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Setup loopback interface
        run: ci/setup_subnet_ubuntu.sh
      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Run Coverage and Generate Report
        run: |
          cargo tarpaulin --out xml --no-default-features --features ${{ matrix.features }} --no-fail-fast --output-dir $PWD -j 1
        working-directory: ${{ matrix.crate }}
        continue-on-error: true
      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.crate }}/cobertura.xml

  upload-codecov:
    needs: coverage-report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all coverage reports
        uses: actions/download-artifact@v4
        with:
          path: reports/
      - name: List contents of the reports directory
        run: ls -a reports
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5
        with:
          directory: reports
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
