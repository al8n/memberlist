name: coverage

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'COPYRIGHT'
      - 'LICENSE*'
      - '**.md'
      - '**.txt'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'COPYRIGHT'
      - 'LICENSE*'
      - '**.md'
      - '**.txt'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage-report:
    name: Generate Coverage for ${{ matrix.crate }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - crate: memberlist
            features: "test,tokio,quinn,tcp"
            name: "coverage-report-memberlist"
          - crate: transports/net
            features: "test,tokio,tcp"
            name: "coverage-report-net"
          - crate: transports/quic
            features: "test,tokio,quinn"
            name: "coverage-report-quic"
    steps:
      - uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Setup loopback interface
        run: ci/setup_subnet_ubuntu.sh
      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Run Coverage and Generate Report
        run: |
          cargo tarpaulin --out xml --features ${{ matrix.features }} --no-fail-fast --output-dir $PWD
        working-directory: ${{ matrix.crate }}
        continue-on-error: true
      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.crate }}/cobertura.xml

  upload-codecov:
    needs: coverage-report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download all coverage reports
        uses: actions/download-artifact@v3
        with:
          path: reports/
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with: 
          fail_ci_if_error: false
          files: ./reports/*/*.xml
